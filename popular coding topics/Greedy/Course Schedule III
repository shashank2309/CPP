
class Solution {
public:
    int scheduleCourse(vector<vector<int>>& arr) {
        
        sort(arr.begin(),arr.end(),[](vector<int>& a, vector<int>&b)
       {
          if(a[1]>=b[1])
             return false;
          else
             return true;
       });

        long  pre = 0 ,time = 0 , c = 0;
        priority_queue<long>q;
     
        
        for(int i = 0;i<arr.size();i++)
        {
          if(arr[i][0] + time <= arr[i][1])
          {
              q.push(arr[i][0]);
              time+=arr[i][0];
              c++;
          }
            
          else
          {
              if(q.size() && q.top()> arr[i][0])
              {
                  int x = q.top();
                  q.pop();
                  q.push(arr[i][0]);
                  time  += (arr[i][0]-x);
              }
          }
        }
        
        return c;
        

    }
};
